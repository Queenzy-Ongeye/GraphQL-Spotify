type Query {
    "Hand picked playlist for all users"
    featuredPlaylists: [Playlist!]!
    "retrieves a specific playlist"
    playlist(id: ID!): Playlist
}

"A curated collection of tracks"
type Playlist{
    id: ID!
    name: String!
    description: String
    tracks: [Tracks!]!
}
type Tracks {
    id: ID!
    name: String!
    duration_ms: Int!
    explicit: Boolean!
    uri: String!
}
type Artist{
    id: ID
    name: String
    birthYear: Int
    albumNames: [String]
}

# Mutation section
type Mutation {
  "Add one or more items to a user's playlist."
  addItemsToPlaylist(input: AddItemsToPlaylistInput!): AddItemsToPlaylistPayload!
}

type AddItemsToPlaylistPayload {
  "Similar to HTTP status code, represents the status of the mutation"
  code: Int!
  "Indicates whether the mutation was successful"
  success: Boolean!
  "Human-readable message for the UI"
  message: String!
  "The playlist that contains the newly added items"
  playlist: Playlist
}

input AddItemsToPlaylistInput {
  "The ID of the playlist."
  playlistId: ID!
  "A comma-separated list of Spotify URIs to add."
  uris: [String!]!
}